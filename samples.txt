// Teste simples co-rotina
{
  proc teste( ) {
	{
		var a = 1,
		cor teste2( ) {
			while not (a == 10) do
			write(a); a := a + 1; yield
		};
		resume teste2();
		write("Intervalo");
		resume teste2()
	}
  };
 call teste()
 }

// Teste escopo da vari√°vel
{
	cor teste2( ) {
		{
			proc novo(){
				{
					var a = 25;
					write (a)
				}
			},var a = 1;
			write (a);
			a := a + 1;
			yield;
			write(a);
			yield;
			call novo()
		}
	}, proc teste1(){
		{
			var a = 10;
			write (a)
		}
	}, var a = 15;
    
	resume teste2();
	call teste1();
	write (a);
	resume teste2();
	resume teste2()
}

// Teste escopo procedimento
{
	cor teste2( ) {
		{
			proc teste1(){
				{
					var a = 25;
					write (a)
				}
			};
			call teste1();
			yield;
			call teste1()
		}
	}, proc teste1(){
		{
			var a = 10;
			write (a)
		}
	};
    
	resume teste2();
	call teste1();
	resume teste2()
}

//Testes retorno de co-rotinas

{
	cor teste() : int{
		{
		var a = 1; 
		write(a); 
		yield a; 
		a := a + 1; 
		write(a);
		return a
		}
	}, 
	var b = 0; 
	b:= resume teste(); 
	write(b); 
	b := resume teste();
	write(b)
}

{
	cor teste() : int{
		{
		var a = 1, 
		cor teste2 () : int{
			a := 100;
			return a
		};
		resume teste2(); 
		write(a);
		return a
		}
	}, 
	var b = 0;
	b := resume teste();
	write(b)
}

//Teste Procedimento com retorno
{
	proc teste(){
		write("teste")
	},
	proc teste2 (int a): int{
		return a + a
	},
	var a = 0;
	call teste();
	a := call teste2(2);
	write(a)
}